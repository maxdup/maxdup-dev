@use "sass:math";

$g-width: 20vw;
$g-height: 30vh;
$nudge: 5; // percent
$n-node: 5;

#trajectory {
    .main-blurb {
        float: right;
    }

    .trajectory-graph {
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        margin: auto;
    }

    i {
        font-size: 4rem;
        line-height: 5rem;
        position: absolute;
        top: 0;
        right: 7vw;
        color: base-color(8);
        margin-right: -2.5rem;
    }

    #path.aside-blurb {
        height: 30rem;
    }

    @mixin graph-item() {
        background: base-color(f);
        color: base-color(f);
        @include theme-transition(background, color, font-size, height, width);
    }

    @mixin graph-item-state-active() {
        background: base-color(f);
        color: base-color(f);
        font-size: 3rem;
    }

    @mixin graph-item-state-inactive() {
        background: base-color(8);
        color: base-color(8);
        font-size: 2rem;
    }

    .graph-node {
        height: 0px;
        width: 0px;
        position: absolute;
        display: flex;
        justify-content: center;

        .graph-node-text {
            position: absolute;
            text-align: right;
            left: -10rem;
            top: -1rem;
            line-height: 0;
            opacity: 0.5;
            @include graph-item();
            @include graph-item-state-inactive();
        }

        &::after {
            content: '';
            border-radius: 50%;
            //height: math.div($g-height, 4);
            width: 1rem;
            height: 1rem;
            @include graph-item();
            @include graph-item-state-inactive();

            flex-shrink: 0;
            display: inline;
            position: absolute;

            top: -100%;
            bottom: -100%;
            margin: auto;
            z-index: 2;
        }

        &:hover::after {
            width: 2rem;
            height: 2rem;
            @include graph-item-state-active();
        }

        &:hover.graph-node-text {
            @include graph-item-state-active();
        }

        .graph-node-line {
            content: '';
            display: block;
            position: absolute;
            bottom: 0;
            left: 0;
            overflow: hidden;
            width: 0;
            height: 0;
            z-index: 1;
        }

        .graph-node-line::before {
            content: '';
            display: block;
            width: 2px;
            height: 100vh;
            background: base-color(8);
            position: absolute;
            left: 0;
            right: 0;
            bottom: 0;
            top: 0;
            margin: auto;
            transform: var(--line-angle);
            transform-origin: 50% 50%;
        }

        &:first-child .graph-node-line {
            content: none;
        }

    }
}

#trajectory-graph {
    padding: 0;
    display: block;
    position: absolute;
    right: 7vw;
    top: 7rem;
    margin: auto;
    pointer-events: none;
    height: $g-height;
    width: $g-width;
}

@function offset-for($n) {
    $offset: 0;

    @if $n > 1 and $n < $n-node {
        @if $n % 2 == 0 {
            $offset: $nudge;
        } @else {
            $offset: $nudge * -1;
        }
    }

    @return $offset;
}

@for $i from 1 through $n-node {
    #trajectory .graph-node {
        $offset: offset-for($i);

        &:nth-child(#{$i}) {
            top: ($i - 1) * math.div(100%, $n-node - 1);
            left: 100% - ($i - 1) * math.div(100%, $n-node - 1) + $offset;

            .graph-node-line {
                height: math.div($g-height, 100) * 25;
                width: math.div($g-width, 100) * (25 - offset-for($i) + offset-for($i - 1));
            }
        }
    }
}
