@use 'sass:color';

// ------------------------------------------
// Base Style
// ------------------------------------------

body  {
    margin: 0;
    overflow-x: hidden;
    background: base-color(0);

    opacity: 0;
    animation: fadeInAnimation ease 2s;
    animation-iteration-count: 1;
    animation-fill-mode: forwards;
    animation-delay: 0.5s;

    h1 {
        font-size: 2rem;
    }

    h2 {
        font-size: 4rem;
        line-height: 1;
        margin: 0 0 2.5rem;
    }

    h3 {
        font-size: 2rem;
        line-height: 1.25;
        margin: 0 0 1rem;
    }

    h4 {
        line-height: 1;
    }

    p {
        margin: 1rem 0;
        font-size: 1.25rem;
        line-height: 1.75rem;
    }

    b {
        font-weight: 800;
    }

    form {
        margin: 1rem 0rem 3rem;
        padding: 3rem;

        >button,
        >input,
        >textarea {
            display: block;
            margin-bottom: 1.5rem;
        }
    }

    img {
        &[role=presentation] {
            user-select: none;
        }
    }
}

// ------------------------------------------
// Global Style
// ------------------------------------------
.container {
    overflow: hidden;
}

.floater-container {
    width: 100%;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    min-height: calc(100vh - 5.5rem);
}

.floating-container {
    position: relative;
    box-sizing: border-box;
    display: flex;
    flex-grow: 0;
    align-items: center;

    width: 100%;
    max-width: 1600px;
    padding: 8rem 4rem;

    @media only screen and (max-width: $transition-medium) {
        max-width: 1300px;
        padding: 8rem 3rem;
    }

    @media only screen and (max-width: $transition-small) {
        padding: 8rem 2rem;
    }
}

.main-blurb {
    width: 60%;

    h2 { margin-top: 0; }
}

.full-blurb {
    display: block;
    width: 100%;
}

.aside-blurb {
    position: relative;
    display: block;
    width: 20%;
    flex-grow: 1;
    margin: 0 3vw;

    img {
        height: 4rem;
        width: auto;
    }

    .floating-aside-blurb {
        position: absolute;
        height: 100%;
        width: 100%;
        top: calc(var(--bg-offset-y) / 4);
        left: calc(var(--bg-offset-x) / 3);
    }
}

@media only screen and (max-width: $transition-medium) {
    body .main-blurb {
        width: 100%;
    }

    body .aside-blurb {
        display: none !important;
    }
}

.float-columns {
    margin-top: 4.5rem;
    margin-bottom: 1rem;
}

.float-column {
    display: inline-block;
    margin-right: 4rem;
    vertical-align: top;
    margin-left: 0;
    margin-bottom: 2rem;

    ul {
        list-style: none;
        padding: 0;
        padding-left: 1rem;
    }

    >*:not(a) {
        display: block;
    }

    a {
        margin-top: 0.5rem;
        padding: 0.1rem 0.2rem;

        i {
            display: contents;
        }
        i:first-child {
            margin-right: 0.25rem;
        }
    }

    h3 {
        margin-bottom: 1rem;
    }
}

// ------------------------------------------
// Main background
// ------------------------------------------

$bg-image: url('./images/background.webp');
$bg-noise: url('./images/noise.webp');
$bg-glow: radial-gradient(circle at 10% 30%,
                         rgba(64, 16, 16, 0.55) 0%,
                         rgba(0, 0, 0) 50%,
                         rgba(0, 0, 0) 60%,
                         rgba(16, 28, 16, 1.0) 90%);

canvas,
body::before,
body:not(.gl-enabled)::after {
    display: block;
    height: 100vh;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
}

canvas {
    filter: opacity(0.75);
    z-index: -11;
}

body:not(.gl-enabled)::after {
    content: '';
    z-index: -11;
    background-image: $bg-image;
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;

    animation-name: delayBackground;
    animation-iteration-count: 1;
    animation-timing-function: ease-in;
    animation-duration: 1s;
}

body::before {
    content: '';
    z-index: -10;

    background-image: $bg-glow;
    animation-name: none;
    mix-blend-mode: screen;

    mask-image: $bg-noise;
    mask-repeat: repeat;
    mask-position: 0% 0%;
}

@keyframes delayBackground {
    0% { background-image: $bg-glow; }
    50% { background-image: $bg-glow; }
    100% { background-image: $bg-glow, $bg-image; }
}


// ------------------------------------------
// Container backgrounds
// ------------------------------------------

@mixin backgrounds($pseudo, $invert) {
    #trajectory.container:#{$pseudo} {
        background: radial-gradient(circle at 60% 100%,
                                    invert-lum(hsla(0, 33.33%, 10%, 0.73), $invert) 0%,
                                    invert-lum(hsla(120, 20.93%, 8.43%, 0.53), $invert) 100%);
        background-attachment: fixed;
        mask-image: linear-gradient(155deg,
                                    invert-lum(hsla(0, 0.0%, 0.0%, 0), $invert) 10%,
                                    invert-lum(hsla(0, 0.0%, 0.0%, 1), $invert) 40%);
    }

    #skills.container:#{$pseudo} {
        background: radial-gradient(circle at 60% 100%,
                                    invert-lum(hsla(0, 11.11%, 30%, 0.73), $invert) 0%,
                                    invert-lum(hsla(120, 10.53%, 14.9%, 0.87), $invert) 100%);
        background-attachment: fixed;
        mask-image: radial-gradient(circle at bottom left,
                                    invert-lum(hsla(0, 0.0%, 0.0%, 1), $invert),
                                    invert-lum(hsla(0, 0.0%, 0.0%, 0.95), $invert) 40%,
                                    invert-lum(hsla(0, 0.0%, 0.0%, 0.65), $invert) 100%);
    }

    #where.container:#{$pseudo} {
        background: radial-gradient(circle at 60% 100%,
                                    invert-lum(hsla(0, 9.09%, 33.33%, 0.73), $invert) 0%,
                                    invert-lum(hsla(120, 9.09%, 33.33%, 0.73), $invert) 100%);
        background-attachment: fixed;
    }
}

@include backgrounds("after", -1);
@include backgrounds("before", +1);

:root {
    .container::before,
    .container::after {
        @include theme-transition(opacity);
    }

    .container::before {
        opacity: 0;
    }

    .container::after {
        opacity: 1;
    }

    --select-background: white;
    --select-color: black;
}

:root.light-theme {
    .container::before {
        opacity: 1;
    }

    .container::after {
        opacity: 0;
    }

    body:not(.gl-enabled)::after {
        filter: invert(1);
    }

    --select-background: black;
    --select-color: white;
}
